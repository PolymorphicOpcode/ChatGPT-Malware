#
# Metasploit Module
#
# Name: Log4J Vulnerability Scanner
# Version: 1.0
# Platform: Windows, Linux, OSX
#

require 'msf/core'

class MetasploitModule < Msf::Auxiliary

  include Msf::Exploit::Remote::Tcp

  def initialize(info = {})
    super(update_info(info,
      'Name'           => 'Log4J Vulnerability Scanner',
      'Description'    => %q{
        This module scans target hosts for vulnerable versions of log4j, which
        has been known to suffer from numerous security issues.
      },
      'Author'         => [ 'ida-bro & davinci' ],
      'License'        => MSF_LICENSE,
      'References'     =>
        [
          [ 'CVE', 'CVE-2021-44228' ],
        ],
      'Actions'        =>
        [
          [ 'Scan' ]
        ],
      'DefaultAction'  => 'Scan'
    ))

    register_options([
      Opt::RPORT(80)
    ])
  end

  def run
    print_status("Scanning #{rhost}:#{rport} for vulnerable log4j instances...")

    begin
      sock = connect
    rescue
      print_error("Unable to connect to #{rhost}:#{rport}")
      return
    end

    request = "GET /log4j.properties HTTP/1.1\r\nHost: #{rhost}\r\n\r\n"
    sock.put(request)
    res = sock.get_once
    if res
      version = res.match(/log4j\.version\s*=\s*(.*)/)
      if version
        version = version[1]
        if version =~ /1\.2\.([1-9]|[1-9][0-9])/
          print_good("#{rhost} is running vulnerable log4j version #{version}")
        else
          print_status("#{rhost} is running log4j version #{version}")
        end
      else
        print_status("#{rhost} does not appear to be using log4j")
      end
    else
      print_error("No response from #{rhost}:#{rport}")
    end

    disconnect
  end

end
